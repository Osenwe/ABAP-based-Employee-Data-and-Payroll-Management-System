*&---------------------------------------------------------------------*
*& Module Pool       ZTERM_PROJECT_Z111
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*


INCLUDE ZTERM_PROJECT_Z111_TOP                  .    " global Data

 INCLUDE ZTERM_PROJECT_Z111_O01                  .  " PBO-Modules
 INCLUDE ZTERM_PROJECT_Z111_I01                  .  " PAI-Modules
 INCLUDE ZTERM_PROJECT_Z111_F01                  .  " FORM-Routines

*&SPWIZARD: FUNCTION CODES FOR TABSTRIP 'EMP'
CONSTANTS: BEGIN OF C_EMP,
             TAB1 LIKE SY-UCOMM VALUE 'EMP_FC1',
             TAB2 LIKE SY-UCOMM VALUE 'EMP_FC2',
           END OF C_EMP.

*&SPWIZARD: DATA FOR TABSTRIP 'EMP'
CONTROLS:  EMP TYPE TABSTRIP.
DATA:      BEGIN OF G_EMP,
             SUBSCREEN   LIKE SY-DYNNR,
             PROG        LIKE SY-REPID VALUE 'ZTERM_PROJECT_Z111',
             PRESSED_TAB LIKE SY-UCOMM VALUE C_EMP-TAB1,
           END OF G_EMP.

*&SPWIZARD: OUTPUT MODULE FOR TS 'EMP'. DO NOT CHANGE THIS LINE!
*&SPWIZARD: SETS ACTIVE TAB
MODULE EMP_ACTIVE_TAB_SET OUTPUT.
  EMP-ACTIVETAB = G_EMP-PRESSED_TAB.
  CASE G_EMP-PRESSED_TAB.
    WHEN C_EMP-TAB1.
      G_EMP-SUBSCREEN = '0301'.
    WHEN C_EMP-TAB2.
      G_EMP-SUBSCREEN = '0302'.
    WHEN OTHERS.
*&SPWIZARD:      DO NOTHING
  ENDCASE.
ENDMODULE.

*&SPWIZARD: INPUT MODULE FOR TS 'EMP'. DO NOT CHANGE THIS LINE!
*&SPWIZARD: GETS ACTIVE TAB
MODULE EMP_ACTIVE_TAB_GET INPUT.
  OK_CODE = SY-UCOMM.
  CASE OK_CODE.
    WHEN C_EMP-TAB1.
      G_EMP-PRESSED_TAB = C_EMP-TAB1.
    WHEN C_EMP-TAB2.
      G_EMP-PRESSED_TAB = C_EMP-TAB2.
    WHEN OTHERS.
*&SPWIZARD:      DO NOTHING
  ENDCASE.
ENDMODULE.

*&SPWIZARD: DECLARATION OF TABLECONTROL 'TAB_ACTIVE' ITSELF
CONTROLS: TAB_ACTIVE TYPE TABLEVIEW USING SCREEN 0301.

*&SPWIZARD: OUTPUT MODULE FOR TC 'TAB_ACTIVE'. DO NOT CHANGE THIS LINE!
*&SPWIZARD: UPDATE LINES FOR EQUIVALENT SCROLLBAR
MODULE TAB_ACTIVE_CHANGE_TC_ATTR OUTPUT.
  DESCRIBE TABLE IT_ACTIVE LINES TAB_ACTIVE-lines.
ENDMODULE.

*&SPWIZARD: INPUT MODULE FOR TC 'TAB_ACTIVE'. DO NOT CHANGE THIS LINE!
*&SPWIZARD: MODIFY TABLE
MODULE TAB_ACTIVE_MODIFY INPUT.
  MODIFY IT_ACTIVE
    FROM WA_ACTIVE
    INDEX TAB_ACTIVE-CURRENT_LINE.
ENDMODULE.

*&SPWIZARD: DECLARATION OF TABLECONTROL 'TAB_INACTIVE' ITSELF
CONTROLS: TAB_INACTIVE TYPE TABLEVIEW USING SCREEN 0302.

*&SPWIZARD: OUTPUT MODULE FOR TC 'TAB_INACTIVE'. DO NOT CHANGE THIS LINE
*&SPWIZARD: UPDATE LINES FOR EQUIVALENT SCROLLBAR
MODULE TAB_INACTIVE_CHANGE_TC_ATTR OUTPUT.
  DESCRIBE TABLE IT_INACTIVE LINES TAB_INACTIVE-lines.
ENDMODULE.

*&SPWIZARD: FUNCTION CODES FOR TABSTRIP 'TAB_LEAVE'
CONSTANTS: BEGIN OF C_TAB_LEAVE,
             TAB1 LIKE SY-UCOMM VALUE 'TAB_LEAVE_FC1',
             TAB2 LIKE SY-UCOMM VALUE 'TAB_LEAVE_FC2',
             TAB3 LIKE SY-UCOMM VALUE 'TAB_LEAVE_FC3',
           END OF C_TAB_LEAVE.
*&SPWIZARD: DATA FOR TABSTRIP 'TAB_LEAVE'
CONTROLS:  TAB_LEAVE TYPE TABSTRIP.
DATA:      BEGIN OF G_TAB_LEAVE,
             SUBSCREEN   LIKE SY-DYNNR,
             PROG        LIKE SY-REPID VALUE 'ZTERM_PROJECT_Z111',
             PRESSED_TAB LIKE SY-UCOMM VALUE C_TAB_LEAVE-TAB1,
           END OF G_TAB_LEAVE.

*&SPWIZARD: OUTPUT MODULE FOR TS 'TAB_LEAVE'. DO NOT CHANGE THIS LINE!
*&SPWIZARD: SETS ACTIVE TAB
MODULE TAB_LEAVE_ACTIVE_TAB_SET OUTPUT.
  TAB_LEAVE-ACTIVETAB = G_TAB_LEAVE-PRESSED_TAB.
  CASE G_TAB_LEAVE-PRESSED_TAB.
    WHEN C_TAB_LEAVE-TAB1.
      G_TAB_LEAVE-SUBSCREEN = '0601'.
    WHEN C_TAB_LEAVE-TAB2.
      G_TAB_LEAVE-SUBSCREEN = '0602'.
    WHEN C_TAB_LEAVE-TAB3.
      G_TAB_LEAVE-SUBSCREEN = '0603'.
    WHEN OTHERS.
*&SPWIZARD:      DO NOTHING
  ENDCASE.
ENDMODULE.

*&SPWIZARD: INPUT MODULE FOR TS 'TAB_LEAVE'. DO NOT CHANGE THIS LINE!
*&SPWIZARD: GETS ACTIVE TAB
MODULE TAB_LEAVE_ACTIVE_TAB_GET INPUT.
  OK_CODE = SY-UCOMM.
  CASE OK_CODE.
    WHEN C_TAB_LEAVE-TAB1.
      G_TAB_LEAVE-PRESSED_TAB = C_TAB_LEAVE-TAB1.
    WHEN C_TAB_LEAVE-TAB2.
      G_TAB_LEAVE-PRESSED_TAB = C_TAB_LEAVE-TAB2.
    WHEN C_TAB_LEAVE-TAB3.
      G_TAB_LEAVE-PRESSED_TAB = C_TAB_LEAVE-TAB3.
    WHEN OTHERS.
*&SPWIZARD:      DO NOTHING
  ENDCASE.
ENDMODULE.

*INCLUDE zterm_project_z111_tab5f01.

*&SPWIZARD: DECLARATION OF TABLECONTROL 'TAB_APPROVE' ITSELF
CONTROLS: TAB_APPROVE TYPE TABLEVIEW USING SCREEN 0601.

*&SPWIZARD: OUTPUT MODULE FOR TC 'TAB_APPROVE'. DO NOT CHANGE THIS LINE!
*&SPWIZARD: UPDATE LINES FOR EQUIVALENT SCROLLBAR
MODULE TAB_APPROVE_CHANGE_TC_ATTR OUTPUT.
  DESCRIBE TABLE IT_APPROVE LINES TAB_APPROVE-lines.
ENDMODULE.

*&SPWIZARD: INPUT MODULE FOR TC 'TAB_APPROVE'. DO NOT CHANGE THIS LINE!
*&SPWIZARD: MODIFY TABLE
MODULE TAB_APPROVE_MODIFY INPUT.
  MODIFY IT_APPROVE
    FROM WA_APPROVE
    INDEX TAB_APPROVE-CURRENT_LINE.
ENDMODULE.

*&SPWIZARD: INPUT MODUL FOR TC 'TAB_APPROVE'. DO NOT CHANGE THIS LINE!
*&SPWIZARD: MARK TABLE
MODULE TAB_APPROVE_MARK INPUT.
  DATA: g_TAB_APPROVE_wa2 like line of IT_APPROVE.
    if TAB_APPROVE-line_sel_mode = 1
    and WA_APPROVE-CLIENT = 'X'.
     loop at IT_APPROVE into g_TAB_APPROVE_wa2
       where CLIENT = 'X'.
       g_TAB_APPROVE_wa2-CLIENT = ''.
       modify IT_APPROVE
         from g_TAB_APPROVE_wa2
         transporting CLIENT.
     endloop.
  endif.
  MODIFY IT_APPROVE
    FROM WA_APPROVE
    INDEX TAB_APPROVE-CURRENT_LINE
    TRANSPORTING CLIENT.
ENDMODULE.

*&SPWIZARD: DECLARATION OF TABLECONTROL 'TAB_REJECT' ITSELF
CONTROLS: TAB_REJECT TYPE TABLEVIEW USING SCREEN 0602.

*&SPWIZARD: OUTPUT MODULE FOR TC 'TAB_REJECT'. DO NOT CHANGE THIS LINE!
*&SPWIZARD: UPDATE LINES FOR EQUIVALENT SCROLLBAR
MODULE TAB_REJECT_CHANGE_TC_ATTR OUTPUT.
  DESCRIBE TABLE IT_REJECT LINES TAB_REJECT-lines.
ENDMODULE.

*&SPWIZARD: INPUT MODULE FOR TC 'TAB_REJECT'. DO NOT CHANGE THIS LINE!
*&SPWIZARD: MODIFY TABLE
MODULE TAB_REJECT_MODIFY INPUT.
  MODIFY IT_REJECT
    FROM WA_REJECT
    INDEX TAB_REJECT-CURRENT_LINE.
ENDMODULE.

*&SPWIZARD: INPUT MODUL FOR TC 'TAB_REJECT'. DO NOT CHANGE THIS LINE!
*&SPWIZARD: MARK TABLE
MODULE TAB_REJECT_MARK INPUT.
  DATA: g_TAB_REJECT_wa2 like line of IT_REJECT.
    if TAB_REJECT-line_sel_mode = 1
    and WA_REJECT-CLIENT = 'X'.
     loop at IT_REJECT into g_TAB_REJECT_wa2
       where CLIENT = 'X'.
       g_TAB_REJECT_wa2-CLIENT = ''.
       modify IT_REJECT
         from g_TAB_REJECT_wa2
         transporting CLIENT.
     endloop.
  endif.
  MODIFY IT_REJECT
    FROM WA_REJECT
    INDEX TAB_REJECT-CURRENT_LINE
    TRANSPORTING CLIENT.
ENDMODULE.

*&SPWIZARD: DECLARATION OF TABLECONTROL 'TAB_PENDING' ITSELF
CONTROLS: TAB_PENDING TYPE TABLEVIEW USING SCREEN 0603.

*&SPWIZARD: OUTPUT MODULE FOR TC 'TAB_PENDING'. DO NOT CHANGE THIS LINE!
*&SPWIZARD: UPDATE LINES FOR EQUIVALENT SCROLLBAR
MODULE TAB_PENDING_CHANGE_TC_ATTR OUTPUT.
  DESCRIBE TABLE IT_PENDING LINES TAB_PENDING-lines.
ENDMODULE.

*&SPWIZARD: INPUT MODULE FOR TC 'TAB_PENDING'. DO NOT CHANGE THIS LINE!
*&SPWIZARD: MODIFY TABLE
MODULE TAB_PENDING_MODIFY INPUT.
  MODIFY IT_PENDING
    FROM WA_PENDING
    INDEX TAB_PENDING-CURRENT_LINE.
ENDMODULE.

*&SPWIZARD: INPUT MODUL FOR TC 'TAB_PENDING'. DO NOT CHANGE THIS LINE!
*&SPWIZARD: MARK TABLE
MODULE TAB_PENDING_MARK INPUT.
  DATA: g_TAB_PENDING_wa2 like line of IT_PENDING.
    if TAB_PENDING-line_sel_mode = 1
    and WA_PENDING-CLIENT = 'X'.
     loop at IT_PENDING into g_TAB_PENDING_wa2
       where CLIENT = 'X'.
       g_TAB_PENDING_wa2-CLIENT = ''.
       modify IT_PENDING
         from g_TAB_PENDING_wa2
         transporting CLIENT.
     endloop.
  endif.
  MODIFY IT_PENDING
    FROM WA_PENDING
    INDEX TAB_PENDING-CURRENT_LINE
    TRANSPORTING CLIENT.
ENDMODULE.

* INCLUDE zterm_project_z111_view_timf01. 

* INCLUDE zterm_project_z111_display_f01.
